Полнотекстовый поиск (СДЕЛАНО):
1. Вручную создать потекстовый индекс.
2. Использовать SEARCH (см. db-api).

Популярное (СДЕЛАНО):
>>> from cargo.shop import models, common
>>>
>>> models.Item.objects.order_by('-buys')[:3]
[<Item: Nokia 6300>, <Item: Nokia 5310>, <Item: Siemens M50>]
>>> models.Producer.objects.order_by('-buys')[:3]
[<Producer: Nokia>, <Producer: Siemens>, <Producer: Samsung Corp.>]

Отображение подчинённых категорий (начиная с третьего уровня)
после выбора какой-нибудь категории (СДЕЛАНО)

Вывод товаров текущей категории при выборе конкретного 
производителя (СДЕЛАНО)

Использовать транзакции (НЕВОЗМОЖНО).
Дело в том, что транзакции в MySQL поддерживают только движки BDB и
   InnoDB. Но первый устарел, а второй не поддерживает полнотекстовый
   поиск. Вернулся на MyISAM.

Поиск с указанием количество выводимых объектов на странице (СДЕЛАНО)
Переход по страницам с результатами поискового запроса (СДЕЛАНО)

Сортировка товаров в списке (СДЕЛАНО)

Возможность совершить покупку, не заходя в описание
товара (СДЕЛАНО)

Ввести в модель Category две авто категории, которые будут отображать
самые популярные товары (сортировка по количеству покупок) и самые
свежие (по дате регистрации).

Переработать схему URL. Все приложения должны только отдавать данные,
всё управление отображением сайта должно производиться в главном
views.py.